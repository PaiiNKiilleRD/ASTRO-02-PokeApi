---
import type { GetStaticPaths } from "astro";
import type { PokemonListResponse } from "@interfaces/pokemon-list.response";

import Layout from "@/layout/Layout.astro";
import PokemonCard from "@components/pokemons/PokemonCard.astro";
import type { number } from "astro/zod";
import Title from "@components/Title.astro";
import { Icon } from "astro-icon/components";

export const getStaticPaths = (async () => {
  const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");

  const { results } = (await resp.json()) as PokemonListResponse;

  return results.map(({ name, url }) => ({
    params: { name: name },
    props: { name: name, url: url },
  }));
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;

const id = url.split("/").at(-2);
const audiSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;

const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;
---

<Layout
  title={`Pokemon - #${id} ${name}`}
  description={`Informacion sobre el pokemon ${name}`}
  image={imageSrc}
>
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
    <a href={`/pokemons/1`}>
      <div
        class="rounded-3xl hover:text-white hover:bg-slate-400 transition-all duration-300 ease-in-out flex gap-3 px-5 min-w-[120px] bg-white py-3 text-black font-medium mb-10"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="lucide lucide-house"
          ><path d="M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8"></path><path
            d="M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"
          ></path></svg
        >
        Inicio
      </div>
    </a>
    <button onclick="history.back()">Atras</button>
    <div class="flex items-center">
      <div>
        <Title>{name}</Title>
      </div>
      <button id="btn-favorite" class="ml-4" data-name={name} data-id={id}>
        <Icon data-outline name="heart-outline" size={50} />
        <Icon data-full class="hidden" name="heart-full" size={50} />
      </button>
    </div>

    <PokemonCard name={name} url={url} isBig />

    <audio controls class="mt-5">
      <source src={audiSrc} type="audio/ogg" />
      AUDIO NO SOPORTADO
    </audio>
  </section>
</Layout>

<script>
  // interface FavoritePokemon {
  //   name: string;
  //   id: number;
  // }

  import type { FavoritePokemon } from "@interfaces/favorite-pokemon";

  const handlePageLoad = () => {
    let favoritePokemons: FavoritePokemon[] = JSON.parse(
      localStorage.getItem("favorites") ?? "[]"
    );

    const btnFavorite = document.querySelector(
      "#btn-favorite"
    ) as HTMLButtonElement;

    if (!btnFavorite) return;

    const name = btnFavorite.dataset.name ?? "";
    const id = btnFavorite.dataset.id ?? "";

    const heartOutline = btnFavorite.querySelector(
      "[data-outline]"
    ) as HTMLElement;
    const heartFull = btnFavorite.querySelector("[data-full]") as HTMLElement;

    const showFavoriteHeart = () => {
      const isFavorite = favoritePokemons.some((fav) => fav.name === name);

      if (!isFavorite) {
        return;
      } else {
        heartOutline.classList.toggle("hidden");
        heartFull.classList.toggle("hidden");
      }
    };

    const toggleFavorite = () => {
      const isFavorite = favoritePokemons.some((fav) => fav.name === name);

      if (isFavorite) {
        favoritePokemons = favoritePokemons.filter((fav) => fav.name !== name);
      } else {
        favoritePokemons.push({
          id: +id,
          name: name,
        });
      }

      localStorage.setItem("favorites", JSON.stringify(favoritePokemons));
    };

    btnFavorite.addEventListener("click", () => {
      heartOutline.classList.toggle("hidden");
      heartFull.classList.toggle("hidden");

      toggleFavorite();
    });

    showFavoriteHeart();
  };

  document.addEventListener("astro:page-load", handlePageLoad);
</script>

<style>
  #btn-favorite {
    @apply hover:animate-pulse;
  }
</style>
